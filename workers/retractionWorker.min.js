self.onmessage=async({data:e})=>{let{task:t,batch:r,retractionWatchDB:a}=e;try{if("checkRetraction"===t){for(let c of r){let s=!1,o=c.title,p=o.toLowerCase().trim().replace(/[.,\/#!$%\^&\*;:}=\_\'\"\(\)\[\]\{\}\+-`~)]/g,"").replace(/\s+/g,"").replace(/retracted/g,"").replace(/retraction/g,"");a.map(async e=>{if(s)return;let t=e.Title.toLowerCase().trim().replace(/[.,\/#!$%\^&\*;:}=\_\'\"\(\)\[\]\{\}\+-`~)]/g,"").replace(/\s+/g,"").replace(/retracted/g,"").replace(/retraction/g,"");p===t&&(s=!0)}),self.postMessage({type:"working",task:"checkRetraction",publication:c,isPubRetracted:s})}self.postMessage({type:"done",task:t})}}catch(l){self.postMessage({type:"error",task:t,error:l.message})}};